{"remainingRequest":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Zevitsoft\\Documents\\pools\\src\\pages\\Member\\Member.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\src\\pages\\Member\\Member.vue","mtime":1625661853807},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}