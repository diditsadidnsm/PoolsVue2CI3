{"remainingRequest":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Zevitsoft\\Documents\\pools\\src\\pages\\Tables\\Basic.vue?vue&type=template&id=71d02ef0&scoped=true&","dependencies":[{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\src\\pages\\Tables\\Basic.vue","mtime":1625555294577},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}