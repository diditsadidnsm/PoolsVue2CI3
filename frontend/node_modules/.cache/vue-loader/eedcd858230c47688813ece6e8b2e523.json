{"remainingRequest":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Zevitsoft\\Documents\\pools\\src\\pages\\Typography\\Typography.vue?vue&type=template&id=65578a8a&","dependencies":[{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\src\\pages\\Typography\\Typography.vue","mtime":1625555294577},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}