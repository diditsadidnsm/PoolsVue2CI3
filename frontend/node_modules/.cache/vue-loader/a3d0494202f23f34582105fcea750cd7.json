{"remainingRequest":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Zevitsoft\\Documents\\pools\\src\\pages\\Faq\\Faq.vue?vue&type=template&id=0c2455ee&","dependencies":[{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\src\\pages\\Faq\\Faq.vue","mtime":1625666105268},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}