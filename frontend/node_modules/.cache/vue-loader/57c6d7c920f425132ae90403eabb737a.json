{"remainingRequest":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Zevitsoft\\Documents\\pools\\src\\pages\\Icons\\Icons.vue?vue&type=template&id=1de05651&scoped=true&","dependencies":[{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\src\\pages\\Icons\\Icons.vue","mtime":1625555294577},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Zevitsoft\\Documents\\pools\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "section",
    [
      _vm._m(0),
      _c(
        "b-tabs",
        [
          _c(
            "b-tab",
            { attrs: { title: "Glyphicons", active: "" } },
            [
              _c("h4", [
                _vm._v("Built-in "),
                _c("span", { staticClass: "fw-semi-bold" }, [
                  _vm._v("Glyphicons")
                ])
              ]),
              _c(
                "b-row",
                { staticClass: "icon-list" },
                [
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-asterisk"
                      }),
                      _vm._v("asterisk")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-plus" }),
                      _vm._v("plus")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-euro" }),
                      _vm._v("euro")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-minus" }),
                      _vm._v("minus")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-cloud" }),
                      _vm._v("cloud")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-envelope"
                      }),
                      _vm._v("envelope")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-pencil" }),
                      _vm._v("pencil")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-glass" }),
                      _vm._v("glass")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-music" }),
                      _vm._v("music")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-search" }),
                      _vm._v("search")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-heart" }),
                      _vm._v("heart")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-star" }),
                      _vm._v("star")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-star-empty"
                      }),
                      _vm._v("star-empty")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-user" }),
                      _vm._v("user")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-film" }),
                      _vm._v("film")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-th-large"
                      }),
                      _vm._v("th-large")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-th" }),
                      _vm._v("th")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-th-list"
                      }),
                      _vm._v("th-list")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-ok" }),
                      _vm._v("ok")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-remove" }),
                      _vm._v("remove")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-zoom-in"
                      }),
                      _vm._v("zoom-in")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-zoom-out"
                      }),
                      _vm._v("zoom-out")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-off" }),
                      _vm._v("off")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-signal" }),
                      _vm._v("signal")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-cog" }),
                      _vm._v("cog")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-trash" }),
                      _vm._v("trash")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-home" }),
                      _vm._v("home")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-file" }),
                      _vm._v("file")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-time" }),
                      _vm._v("time")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-road" }),
                      _vm._v("road")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-download-alt"
                      }),
                      _vm._v("download-alt")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-download"
                      }),
                      _vm._v("download")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-upload" }),
                      _vm._v("upload")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-inbox" }),
                      _vm._v("inbox")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-play-circle"
                      }),
                      _vm._v("play-circle")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-repeat" }),
                      _vm._v("repeat")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-refresh"
                      }),
                      _vm._v("refresh")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-list-alt"
                      }),
                      _vm._v("list-alt")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-glyph-lock"
                      }),
                      _vm._v("lock")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-flag" }),
                      _vm._v("flag")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-headphones"
                      }),
                      _vm._v("headphones")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-volume-off"
                      }),
                      _vm._v("volume-off")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-volume-down"
                      }),
                      _vm._v("volume-down")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-volume-up"
                      }),
                      _vm._v("volume-up")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-qrcode" }),
                      _vm._v("qrcode")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-barcode"
                      }),
                      _vm._v("barcode")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-tag" }),
                      _vm._v("tag")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-tags" }),
                      _vm._v("tags")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-book" }),
                      _vm._v("book")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-glyph-bookmark"
                      }),
                      _vm._v("bookmark")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-print" }),
                      _vm._v("print")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-glyph-camera"
                      }),
                      _vm._v("camera")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-font" }),
                      _vm._v("font")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-bold" }),
                      _vm._v("bold")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-italic" }),
                      _vm._v("italic")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-text-height"
                      }),
                      _vm._v("text-height")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-text-width"
                      }),
                      _vm._v("text-width")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-align-left"
                      }),
                      _vm._v("align-left")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-align-center"
                      }),
                      _vm._v("align-center")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-align-right"
                      }),
                      _vm._v("align-right")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-align-justify"
                      }),
                      _vm._v("align-justify")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-list" }),
                      _vm._v("list")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-indent-left"
                      }),
                      _vm._v("indent-left")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-indent-right"
                      }),
                      _vm._v("indent-right")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-facetime-video"
                      }),
                      _vm._v("facetime-video")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-picture"
                      }),
                      _vm._v("picture")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-map-marker"
                      }),
                      _vm._v("map-marker")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-adjust" }),
                      _vm._v("adjust")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-tint" }),
                      _vm._v("tint")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-edit" }),
                      _vm._v("edit")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-share" }),
                      _vm._v("share")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-check" }),
                      _vm._v("check")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-move" }),
                      _vm._v("move")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-step-backward"
                      }),
                      _vm._v("step-backward")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-fast-backward"
                      }),
                      _vm._v("fast-backward")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-backward"
                      }),
                      _vm._v("backward")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-play" }),
                      _vm._v("play")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-pause" }),
                      _vm._v("pause")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-stop" }),
                      _vm._v("stop")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-forward"
                      }),
                      _vm._v("forward")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-fast-forward"
                      }),
                      _vm._v("fast-forward")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-step-forward"
                      }),
                      _vm._v("step-forward")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-eject" }),
                      _vm._v("eject")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-chevron-left"
                      }),
                      _vm._v("chevron-left")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-chevron-right"
                      }),
                      _vm._v("chevron-right")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-plus-sign"
                      }),
                      _vm._v("plus-sign")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-minus-sign"
                      }),
                      _vm._v("minus-sign")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-remove-sign"
                      }),
                      _vm._v("remove-sign")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-ok-sign"
                      }),
                      _vm._v("ok-sign")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-question-sign"
                      }),
                      _vm._v("question-sign")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-info-sign"
                      }),
                      _vm._v("info-sign")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-screenshot"
                      }),
                      _vm._v("screenshot")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-remove-circle"
                      }),
                      _vm._v("remove-circle")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-ok-circle"
                      }),
                      _vm._v("ok-circle")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-ban-circle"
                      }),
                      _vm._v("ban-circle")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-arb-row-left"
                      }),
                      _vm._v("arb-row-left")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-arb-row-right"
                      }),
                      _vm._v("arb-row-right")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-arb-row-up"
                      }),
                      _vm._v("arb-row-up")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-arb-row-down"
                      }),
                      _vm._v("arb-row-down")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-share-alt"
                      }),
                      _vm._v("share-alt")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-resize-full"
                      }),
                      _vm._v("resize-full")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-resize-small"
                      }),
                      _vm._v("resize-small")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-exclamation-sign"
                      }),
                      _vm._v("exclamation-sign")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-gift" }),
                      _vm._v("gift")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-leaf" }),
                      _vm._v("leaf")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-glyph-fire"
                      }),
                      _vm._v("fire")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-eye-open"
                      }),
                      _vm._v("eye-open")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-eye-close"
                      }),
                      _vm._v("eye-close")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-warning-sign"
                      }),
                      _vm._v("warning-sign")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-plane" }),
                      _vm._v("plane")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-glyph-calendar"
                      }),
                      _vm._v("calendar")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-random" }),
                      _vm._v("random")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-comment"
                      }),
                      _vm._v("comment")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-magnet" }),
                      _vm._v("magnet")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-chevron-up"
                      }),
                      _vm._v("chevron-up")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-chevron-down"
                      }),
                      _vm._v("chevron-down")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-retweet"
                      }),
                      _vm._v("retweet")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-shopping-cart"
                      }),
                      _vm._v("shopping-cart")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-folder-close"
                      }),
                      _vm._v("folder-close")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-folder-open"
                      }),
                      _vm._v("folder-open")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-resize-vertical"
                      }),
                      _vm._v("resize-vertical")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-resize-horizontal"
                      }),
                      _vm._v("resize-horizontal")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-hdd" }),
                      _vm._v("hdd")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-bullhorn"
                      }),
                      _vm._v("bullhorn")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-glyph-bell"
                      }),
                      _vm._v("bell")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-certificate"
                      }),
                      _vm._v("certificate")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-thumbs-up"
                      }),
                      _vm._v("thumbs-up")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-thumbs-down"
                      }),
                      _vm._v("thumbs-down")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-hand-right"
                      }),
                      _vm._v("hand-right")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-hand-left"
                      }),
                      _vm._v("hand-left")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-hand-top"
                      }),
                      _vm._v("hand-up")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-hand-down"
                      }),
                      _vm._v("hand-down")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-circle-arb-row-right"
                      }),
                      _vm._v("circle-arb-row-right")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-circle-arb-row-left"
                      }),
                      _vm._v("circle-arb-row-left")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-circle-arb-row-top"
                      }),
                      _vm._v("circle-arb-row-up")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-circle-arb-row-down"
                      }),
                      _vm._v("circle-arb-row-down")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-globe" }),
                      _vm._v("globe")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-glyph-wrench"
                      }),
                      _vm._v("wrench")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-tasks" }),
                      _vm._v("tasks")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-filter" }),
                      _vm._v("filter")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-glyph-briefcase"
                      }),
                      _vm._v("briefcase")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-fullscreen"
                      }),
                      _vm._v("fullscreen")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-dashboard"
                      }),
                      _vm._v("dashboard")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-glyph-paperclip"
                      }),
                      _vm._v("paperclip")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-heart-empty"
                      }),
                      _vm._v("heart-empty")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-link" }),
                      _vm._v("link")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-phone" }),
                      _vm._v("phone")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-glyph-pushpin"
                      }),
                      _vm._v("pushpin")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-usd" }),
                      _vm._v("usd")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-gbp" }),
                      _vm._v("gbp")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-sort" }),
                      _vm._v("sort")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-sort-by-alphabet"
                      }),
                      _vm._v("sort-by-alphabet")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-sort-by-alphabet-alt"
                      }),
                      _vm._v("sort-by-alphabet-alt")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-sort-by-order"
                      }),
                      _vm._v("sort-by-order")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-sort-by-order-alt"
                      }),
                      _vm._v("sort-by-order-alt")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-sort-by-attributes"
                      }),
                      _vm._v("sort-by-attributes")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass:
                          "glyphicon glyphicon-sort-by-attributes-alt"
                      }),
                      _vm._v("sort-by-attributes-alt")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-unchecked"
                      }),
                      _vm._v("unchecked")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", { staticClass: "glyphicon glyphicon-expand" }),
                      _vm._v("expand")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-collapse"
                      }),
                      _vm._v("collapse-down")
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("span", {
                        staticClass: "glyphicon glyphicon-collapse-top"
                      }),
                      _vm._v("collapse-up")
                    ]
                  )
                ],
                1
              )
            ],
            1
          ),
          _c(
            "b-tab",
            [
              _c(
                "template",
                { slot: "title" },
                [
                  _vm._v(" FA 4.7.0 "),
                  _c("b-badge", { attrs: { variant: "danger" } }, [
                    _vm._v("new")
                  ])
                ],
                1
              ),
              _c("h4", [
                _vm._v("Awesome "),
                _c("span", { staticClass: "fw-semi-bold" }, [
                  _vm._v("Font Awesome")
                ])
              ]),
              _c(
                "b-row",
                { staticClass: "icon-list" },
                [
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bed" } }, [
                        _c("i", { staticClass: "fa fa-bed" }),
                        _vm._v(" bed")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/university" } }, [
                        _c("i", { staticClass: "fa fa-bank" }),
                        _vm._v(" bank "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/behance" } }, [
                        _c("i", { staticClass: "fa fa-behance" }),
                        _vm._v(" behance")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/behance-square" } }, [
                        _c("i", { staticClass: "fa fa-behance-square" }),
                        _vm._v(" behance-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bomb" } }, [
                        _c("i", { staticClass: "fa fa-bomb" }),
                        _vm._v(" bomb")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/building" } }, [
                        _c("i", { staticClass: "fa fa-building" }),
                        _vm._v(" building")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/taxi" } }, [
                        _c("i", { staticClass: "fa fa-cab" }),
                        _vm._v(" cab "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/car" } }, [
                        _c("i", { staticClass: "fa fa-car" }),
                        _vm._v(" car")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/child" } }, [
                        _c("i", { staticClass: "fa fa-child" }),
                        _vm._v(" child")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/circle-o-notch" } }, [
                        _c("i", { staticClass: "fa fa-circle-o-notch" }),
                        _vm._v(" circle-o-notch")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/circle-thin" } }, [
                        _c("i", { staticClass: "fa fa-circle-thin" }),
                        _vm._v(" circle-thin")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/codepen" } }, [
                        _c("i", { staticClass: "fa fa-codepen" }),
                        _vm._v(" codepen")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/cube" } }, [
                        _c("i", { staticClass: "fa fa-cube" }),
                        _vm._v(" cube")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/cubes" } }, [
                        _c("i", { staticClass: "fa fa-cubes" }),
                        _vm._v(" cubes")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/database" } }, [
                        _c("i", { staticClass: "fa fa-database" }),
                        _vm._v(" database")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/delicious" } }, [
                        _c("i", { staticClass: "fa fa-delicious" }),
                        _vm._v(" delicious")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/deviantart" } }, [
                        _c("i", { staticClass: "fa fa-deviantart" }),
                        _vm._v(" deviantart")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/digg" } }, [
                        _c("i", { staticClass: "fa fa-digg" }),
                        _vm._v(" digg")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/drupal" } }, [
                        _c("i", { staticClass: "fa fa-drupal" }),
                        _vm._v(" drupal")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/empire" } }, [
                        _c("i", { staticClass: "fa fa-empire" }),
                        _vm._v(" empire")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/envelope-square" } }, [
                        _c("i", { staticClass: "fa fa-envelope-square" }),
                        _vm._v(" envelope-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/fax" } }, [
                        _c("i", { staticClass: "fa fa-fax" }),
                        _vm._v(" fax")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-archive-o" } }, [
                        _c("i", { staticClass: "fa fa-file-archive-o" }),
                        _vm._v(" file-archive-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-audio-o" } }, [
                        _c("i", { staticClass: "fa fa-file-audio-o" }),
                        _vm._v(" file-audio-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-code-o" } }, [
                        _c("i", { staticClass: "fa fa-file-code-o" }),
                        _vm._v(" file-code-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-excel-o" } }, [
                        _c("i", { staticClass: "fa fa-file-excel-o" }),
                        _vm._v(" file-excel-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-image-o" } }, [
                        _c("i", { staticClass: "fa fa-file-image-o" }),
                        _vm._v(" file-image-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-video-o" } }, [
                        _c("i", { staticClass: "fa fa-file-movie-o" }),
                        _vm._v(" file-movie-o "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-pdf-o" } }, [
                        _c("i", { staticClass: "fa fa-file-pdf-o" }),
                        _vm._v(" file-pdf-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-image-o" } }, [
                        _c("i", { staticClass: "fa fa-file-photo-o" }),
                        _vm._v(" file-photo-o "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-image-o" } }, [
                        _c("i", { staticClass: "fa fa-file-picture-o" }),
                        _vm._v(" file-picture-o "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/file-powerpoint-o" } },
                        [
                          _c("i", { staticClass: "fa fa-file-powerpoint-o" }),
                          _vm._v(" file-powerpoint-o")
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-audio-o" } }, [
                        _c("i", { staticClass: "fa fa-file-sound-o" }),
                        _vm._v(" file-sound-o "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-video-o" } }, [
                        _c("i", { staticClass: "fa fa-file-video-o" }),
                        _vm._v(" file-video-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-word-o" } }, [
                        _c("i", { staticClass: "fa fa-file-word-o" }),
                        _vm._v(" file-word-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-archive-o" } }, [
                        _c("i", { staticClass: "fa fa-file-zip-o" }),
                        _vm._v(" file-zip-o "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/empire" } }, [
                        _c("i", { staticClass: "fa fa-ge" }),
                        _vm._v(" ge "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/git" } }, [
                        _c("i", { staticClass: "fa fa-git" }),
                        _vm._v(" git")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/git-square" } }, [
                        _c("i", { staticClass: "fa fa-git-square" }),
                        _vm._v(" git-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/google" } }, [
                        _c("i", { staticClass: "fa fa-google" }),
                        _vm._v(" google")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/graduation-cap" } }, [
                        _c("i", { staticClass: "fa fa-graduation-cap" }),
                        _vm._v(" graduation-cap")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/hacker-news" } }, [
                        _c("i", { staticClass: "fa fa-hacker-news" }),
                        _vm._v(" hacker-news")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/header" } }, [
                        _c("i", { staticClass: "fa fa-header" }),
                        _vm._v(" header")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/history" } }, [
                        _c("i", { staticClass: "fa fa-history" }),
                        _vm._v(" history")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/university" } }, [
                        _c("i", { staticClass: "fa fa-institution" }),
                        _vm._v(" institution "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/joomla" } }, [
                        _c("i", { staticClass: "fa fa-joomla" }),
                        _vm._v(" joomla")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/jsfiddle" } }, [
                        _c("i", { staticClass: "fa fa-jsfiddle" }),
                        _vm._v(" jsfiddle")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/language" } }, [
                        _c("i", { staticClass: "fa fa-language" }),
                        _vm._v(" language")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/life-ring" } }, [
                        _c("i", { staticClass: "fa fa-life-bouy" }),
                        _vm._v(" life-bouy "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/life-ring" } }, [
                        _c("i", { staticClass: "fa fa-life-ring" }),
                        _vm._v(" life-ring")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/life-ring" } }, [
                        _c("i", { staticClass: "fa fa-life-saver" }),
                        _vm._v(" life-saver "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/graduation-cap" } }, [
                        _c("i", { staticClass: "fa fa-mortar-board" }),
                        _vm._v(" mortar-board "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/openid" } }, [
                        _c("i", { staticClass: "fa fa-openid" }),
                        _vm._v(" openid")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/paper-plane" } }, [
                        _c("i", { staticClass: "fa fa-paper-plane" }),
                        _vm._v(" paper-plane")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/paper-plane-o" } }, [
                        _c("i", { staticClass: "fa fa-paper-plane-o" }),
                        _vm._v(" paper-plane-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/paragraph" } }, [
                        _c("i", { staticClass: "fa fa-paragraph" }),
                        _vm._v(" paragraph")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/paw" } }, [
                        _c("i", { staticClass: "fa fa-paw" }),
                        _vm._v(" paw")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/pied-piper" } }, [
                        _c("i", { staticClass: "fa fa-pied-piper" }),
                        _vm._v(" pied-piper")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/pied-piper-alt" } }, [
                        _c("i", { staticClass: "fa fa-pied-piper-alt" }),
                        _vm._v(" pied-piper-alt")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/pied-piper" } }, [
                        _c("i", { staticClass: "fa fa-pied-piper-square" }),
                        _vm._v(" pied-piper-square "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/qq" } }, [
                        _c("i", { staticClass: "fa fa-qq" }),
                        _vm._v(" qq")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/rebel" } }, [
                        _c("i", { staticClass: "fa fa-ra" }),
                        _vm._v(" ra "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/rebel" } }, [
                        _c("i", { staticClass: "fa fa-rebel" }),
                        _vm._v(" rebel")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/recycle" } }, [
                        _c("i", { staticClass: "fa fa-recycle" }),
                        _vm._v(" recycle")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/reddit" } }, [
                        _c("i", { staticClass: "fa fa-reddit" }),
                        _vm._v(" reddit")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/reddit-square" } }, [
                        _c("i", { staticClass: "fa fa-reddit-square" }),
                        _vm._v(" reddit-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/paper-plane" } }, [
                        _c("i", { staticClass: "fa fa-send" }),
                        _vm._v(" send "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/paper-plane-o" } }, [
                        _c("i", { staticClass: "fa fa-send-o" }),
                        _vm._v(" send-o "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/share-alt" } }, [
                        _c("i", { staticClass: "fa fa-share-alt" }),
                        _vm._v(" share-alt")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/share-alt-square" } }, [
                        _c("i", { staticClass: "fa fa-share-alt-square" }),
                        _vm._v(" share-alt-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/slack" } }, [
                        _c("i", { staticClass: "fa fa-slack" }),
                        _vm._v(" slack")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/sliders" } }, [
                        _c("i", { staticClass: "fa fa-sliders" }),
                        _vm._v(" sliders")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/soundcloud" } }, [
                        _c("i", { staticClass: "fa fa-soundcloud" }),
                        _vm._v(" soundcloud")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/space-shuttle" } }, [
                        _c("i", { staticClass: "fa fa-space-shuttle" }),
                        _vm._v(" space-shuttle")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/spoon" } }, [
                        _c("i", { staticClass: "fa fa-spoon" }),
                        _vm._v(" spoon")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/spotify" } }, [
                        _c("i", { staticClass: "fa fa-spotify" }),
                        _vm._v(" spotify")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/steam" } }, [
                        _c("i", { staticClass: "fa fa-steam" }),
                        _vm._v(" steam")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/steam-square" } }, [
                        _c("i", { staticClass: "fa fa-steam-square" }),
                        _vm._v(" steam-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/stumbleupon" } }, [
                        _c("i", { staticClass: "fa fa-stumbleupon" }),
                        _vm._v(" stumbleupon")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/stumbleupon-circle" } },
                        [
                          _c("i", { staticClass: "fa fa-stumbleupon-circle" }),
                          _vm._v(" stumbleupon-circle")
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/life-ring" } }, [
                        _c("i", { staticClass: "fa fa-support" }),
                        _vm._v(" support "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/taxi" } }, [
                        _c("i", { staticClass: "fa fa-taxi" }),
                        _vm._v(" taxi")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/tencent-weibo" } }, [
                        _c("i", { staticClass: "fa fa-tencent-weibo" }),
                        _vm._v(" tencent-weibo")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/tree" } }, [
                        _c("i", { staticClass: "fa fa-tree" }),
                        _vm._v(" tree")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/university" } }, [
                        _c("i", { staticClass: "fa fa-university" }),
                        _vm._v(" university")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/vine" } }, [
                        _c("i", { staticClass: "fa fa-vine" }),
                        _vm._v(" vine")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/weixin" } }, [
                        _c("i", { staticClass: "fa fa-wechat" }),
                        _vm._v(" wechat "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/weixin" } }, [
                        _c("i", { staticClass: "fa fa-weixin" }),
                        _vm._v(" weixin")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/wordpress" } }, [
                        _c("i", { staticClass: "fa fa-wordpress" }),
                        _vm._v(" wordpress")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/yahoo" } }, [
                        _c("i", { staticClass: "fa fa-yahoo" }),
                        _vm._v(" yahoo")
                      ])
                    ]
                  )
                ],
                1
              )
            ],
            2
          ),
          _c(
            "b-tab",
            { attrs: { title: "Web Application" } },
            [
              _c(
                "b-row",
                { staticClass: "icon-list" },
                [
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/adjust" } }, [
                        _c("i", { staticClass: "fa fa-adjust" }),
                        _vm._v(" adjust")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/anchor" } }, [
                        _c("i", { staticClass: "fa fa-anchor" }),
                        _vm._v(" anchor")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/archive" } }, [
                        _c("i", { staticClass: "fa fa-archive" }),
                        _vm._v(" archive")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/arrows" } }, [
                        _c("i", { staticClass: "fa fa-arrows" }),
                        _vm._v(" arrows")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/arrows-h" } }, [
                        _c("i", { staticClass: "fa fa-arrows-h" }),
                        _vm._v(" arrows-h")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/arrows-v" } }, [
                        _c("i", { staticClass: "fa fa-arrows-v" }),
                        _vm._v(" arrows-v")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/asterisk" } }, [
                        _c("i", { staticClass: "fa fa-asterisk" }),
                        _vm._v(" asterisk")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/car" } }, [
                        _c("i", { staticClass: "fa fa-automobile" }),
                        _vm._v(" automobile "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/ban" } }, [
                        _c("i", { staticClass: "fa fa-ban" }),
                        _vm._v(" ban")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/university" } }, [
                        _c("i", { staticClass: "fa fa-bank" }),
                        _vm._v(" bank "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bar-chart-o" } }, [
                        _c("i", { staticClass: "fa fa-bar-chart-o" }),
                        _vm._v(" bar-chart-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/barcode" } }, [
                        _c("i", { staticClass: "fa fa-barcode" }),
                        _vm._v(" barcode")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bars" } }, [
                        _c("i", { staticClass: "fa fa-bars" }),
                        _vm._v(" bars")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/beer" } }, [
                        _c("i", { staticClass: "fa fa-beer" }),
                        _vm._v(" beer")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bell" } }, [
                        _c("i", { staticClass: "fa fa-bell" }),
                        _vm._v(" bell")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bell-o" } }, [
                        _c("i", { staticClass: "fa fa-bell-o" }),
                        _vm._v(" bell-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bolt" } }, [
                        _c("i", { staticClass: "fa fa-bolt" }),
                        _vm._v(" bolt")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bomb" } }, [
                        _c("i", { staticClass: "fa fa-bomb" }),
                        _vm._v(" bomb")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/book" } }, [
                        _c("i", { staticClass: "fa fa-book" }),
                        _vm._v(" book")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bookmark" } }, [
                        _c("i", { staticClass: "fa fa-bookmark" }),
                        _vm._v(" bookmark")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bookmark-o" } }, [
                        _c("i", { staticClass: "fa fa-bookmark-o" }),
                        _vm._v(" bookmark-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/briefcase" } }, [
                        _c("i", { staticClass: "fa fa-briefcase" }),
                        _vm._v(" briefcase")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bug" } }, [
                        _c("i", { staticClass: "fa fa-bug" }),
                        _vm._v(" bug")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/building" } }, [
                        _c("i", { staticClass: "fa fa-building" }),
                        _vm._v(" building")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/building-o" } }, [
                        _c("i", { staticClass: "fa fa-building-o" }),
                        _vm._v(" building-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bullhorn" } }, [
                        _c("i", { staticClass: "fa fa-bullhorn" }),
                        _vm._v(" bullhorn")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bullseye" } }, [
                        _c("i", { staticClass: "fa fa-bullseye" }),
                        _vm._v(" bullseye")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/taxi" } }, [
                        _c("i", { staticClass: "fa fa-cab" }),
                        _vm._v(" cab "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/calendar" } }, [
                        _c("i", { staticClass: "fa fa-calendar" }),
                        _vm._v(" calendar")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/calendar-o" } }, [
                        _c("i", { staticClass: "fa fa-calendar-o" }),
                        _vm._v(" calendar-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/camera" } }, [
                        _c("i", { staticClass: "fa fa-camera" }),
                        _vm._v(" camera")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/camera-retro" } }, [
                        _c("i", { staticClass: "fa fa-camera-retro" }),
                        _vm._v(" camera-retro")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/car" } }, [
                        _c("i", { staticClass: "fa fa-car" }),
                        _vm._v(" car")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/caret-square-o-down" } },
                        [
                          _c("i", { staticClass: "fa fa-caret-square-o-down" }),
                          _vm._v(" caret-square-o-down")
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/caret-square-o-left" } },
                        [
                          _c("i", { staticClass: "fa fa-caret-square-o-left" }),
                          _vm._v(" caret-square-o-left")
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/caret-square-o-right" } },
                        [
                          _c("i", {
                            staticClass: "fa fa-caret-square-o-right"
                          }),
                          _vm._v(" caret-square-o-right")
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/caret-square-o-up" } },
                        [
                          _c("i", { staticClass: "fa fa-caret-square-o-up" }),
                          _vm._v(" caret-square-o-up")
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/certificate" } }, [
                        _c("i", { staticClass: "fa fa-certificate" }),
                        _vm._v(" certificate")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/check" } }, [
                        _c("i", { staticClass: "fa fa-check" }),
                        _vm._v(" check")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/check-circle" } }, [
                        _c("i", { staticClass: "fa fa-check-circle" }),
                        _vm._v(" check-circle")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/check-circle-o" } }, [
                        _c("i", { staticClass: "fa fa-check-circle-o" }),
                        _vm._v(" check-circle-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/check-square" } }, [
                        _c("i", { staticClass: "fa fa-check-square" }),
                        _vm._v(" check-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/check-square-o" } }, [
                        _c("i", { staticClass: "fa fa-check-square-o" }),
                        _vm._v(" check-square-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/child" } }, [
                        _c("i", { staticClass: "fa fa-child" }),
                        _vm._v(" child")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/circle" } }, [
                        _c("i", { staticClass: "fa fa-circle" }),
                        _vm._v(" circle")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/circle-o" } }, [
                        _c("i", { staticClass: "fa fa-circle-o" }),
                        _vm._v(" circle-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/circle-o-notch" } }, [
                        _c("i", { staticClass: "fa fa-circle-o-notch" }),
                        _vm._v(" circle-o-notch")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/circle-thin" } }, [
                        _c("i", { staticClass: "fa fa-circle-thin" }),
                        _vm._v(" circle-thin")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/clock-o" } }, [
                        _c("i", { staticClass: "fa fa-clock-o" }),
                        _vm._v(" clock-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/cloud" } }, [
                        _c("i", { staticClass: "fa fa-cloud" }),
                        _vm._v(" cloud")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/cloud-download" } }, [
                        _c("i", { staticClass: "fa fa-cloud-download" }),
                        _vm._v(" cloud-download")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/cloud-upload" } }, [
                        _c("i", { staticClass: "fa fa-cloud-upload" }),
                        _vm._v(" cloud-upload")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/code" } }, [
                        _c("i", { staticClass: "fa fa-code" }),
                        _vm._v(" code")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/code-fork" } }, [
                        _c("i", { staticClass: "fa fa-code-fork" }),
                        _vm._v(" code-fork")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/coffee" } }, [
                        _c("i", { staticClass: "fa fa-coffee" }),
                        _vm._v(" coffee")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/cog" } }, [
                        _c("i", { staticClass: "fa fa-cog" }),
                        _vm._v(" cog")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/cogs" } }, [
                        _c("i", { staticClass: "fa fa-cogs" }),
                        _vm._v(" cogs")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/comment" } }, [
                        _c("i", { staticClass: "fa fa-comment" }),
                        _vm._v(" comment")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/comment-o" } }, [
                        _c("i", { staticClass: "fa fa-comment-o" }),
                        _vm._v(" comment-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/comments" } }, [
                        _c("i", { staticClass: "fa fa-comments" }),
                        _vm._v(" comments")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/comments-o" } }, [
                        _c("i", { staticClass: "fa fa-comments-o" }),
                        _vm._v(" comments-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/compass" } }, [
                        _c("i", { staticClass: "fa fa-compass" }),
                        _vm._v(" compass")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/credit-card" } }, [
                        _c("i", { staticClass: "fa fa-credit-card" }),
                        _vm._v(" credit-card")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/crop" } }, [
                        _c("i", { staticClass: "fa fa-crop" }),
                        _vm._v(" crop")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/crosshairs" } }, [
                        _c("i", { staticClass: "fa fa-crosshairs" }),
                        _vm._v(" crosshairs")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/cube" } }, [
                        _c("i", { staticClass: "fa fa-cube" }),
                        _vm._v(" cube")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/cubes" } }, [
                        _c("i", { staticClass: "fa fa-cubes" }),
                        _vm._v(" cubes")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/cutlery" } }, [
                        _c("i", { staticClass: "fa fa-cutlery" }),
                        _vm._v(" cutlery")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/tachometer" } }, [
                        _c("i", { staticClass: "fa fa-dashboard" }),
                        _vm._v(" dashboard "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/database" } }, [
                        _c("i", { staticClass: "fa fa-database" }),
                        _vm._v(" database")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/desktop" } }, [
                        _c("i", { staticClass: "fa fa-desktop" }),
                        _vm._v(" desktop")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/dot-circle-o" } }, [
                        _c("i", { staticClass: "fa fa-dot-circle-o" }),
                        _vm._v(" dot-circle-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/download" } }, [
                        _c("i", { staticClass: "fa fa-download" }),
                        _vm._v(" download")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/pencil-square-o" } }, [
                        _c("i", { staticClass: "fa fa-edit" }),
                        _vm._v(" edit "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/ellipsis-h" } }, [
                        _c("i", { staticClass: "fa fa-ellipsis-h" }),
                        _vm._v(" ellipsis-h")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/ellipsis-v" } }, [
                        _c("i", { staticClass: "fa fa-ellipsis-v" }),
                        _vm._v(" ellipsis-v")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/envelope" } }, [
                        _c("i", { staticClass: "fa fa-envelope" }),
                        _vm._v(" envelope")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/envelope-o" } }, [
                        _c("i", { staticClass: "fa fa-envelope-o" }),
                        _vm._v(" envelope-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/envelope-square" } }, [
                        _c("i", { staticClass: "fa fa-envelope-square" }),
                        _vm._v(" envelope-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/eraser" } }, [
                        _c("i", { staticClass: "fa fa-eraser" }),
                        _vm._v(" eraser")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/exchange" } }, [
                        _c("i", { staticClass: "fa fa-exchange" }),
                        _vm._v(" exchange")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/exclamation" } }, [
                        _c("i", { staticClass: "fa fa-exclamation" }),
                        _vm._v(" exclamation")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/exclamation-circle" } },
                        [
                          _c("i", { staticClass: "fa fa-exclamation-circle" }),
                          _vm._v(" exclamation-circle")
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/exclamation-triangle" } },
                        [
                          _c("i", {
                            staticClass: "fa fa-exclamation-triangle"
                          }),
                          _vm._v(" exclamation-triangle")
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/external-link" } }, [
                        _c("i", { staticClass: "fa fa-external-link" }),
                        _vm._v(" external-link")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/external-link-square" } },
                        [
                          _c("i", {
                            staticClass: "fa fa-external-link-square"
                          }),
                          _vm._v(" external-link-square")
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/eye" } }, [
                        _c("i", { staticClass: "fa fa-eye" }),
                        _vm._v(" eye")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/eye-slash" } }, [
                        _c("i", { staticClass: "fa fa-eye-slash" }),
                        _vm._v(" eye-slash")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/fax" } }, [
                        _c("i", { staticClass: "fa fa-fax" }),
                        _vm._v(" fax")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/female" } }, [
                        _c("i", { staticClass: "fa fa-female" }),
                        _vm._v(" female")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/fighter-jet" } }, [
                        _c("i", { staticClass: "fa fa-fighter-jet" }),
                        _vm._v(" fighter-jet")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-archive-o" } }, [
                        _c("i", { staticClass: "fa fa-file-archive-o" }),
                        _vm._v(" file-archive-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-audio-o" } }, [
                        _c("i", { staticClass: "fa fa-file-audio-o" }),
                        _vm._v(" file-audio-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-code-o" } }, [
                        _c("i", { staticClass: "fa fa-file-code-o" }),
                        _vm._v(" file-code-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-excel-o" } }, [
                        _c("i", { staticClass: "fa fa-file-excel-o" }),
                        _vm._v(" file-excel-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-image-o" } }, [
                        _c("i", { staticClass: "fa fa-file-image-o" }),
                        _vm._v(" file-image-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-video-o" } }, [
                        _c("i", { staticClass: "fa fa-file-movie-o" }),
                        _vm._v(" file-movie-o "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-pdf-o" } }, [
                        _c("i", { staticClass: "fa fa-file-pdf-o" }),
                        _vm._v(" file-pdf-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-image-o" } }, [
                        _c("i", { staticClass: "fa fa-file-photo-o" }),
                        _vm._v(" file-photo-o "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-image-o" } }, [
                        _c("i", { staticClass: "fa fa-file-picture-o" }),
                        _vm._v(" file-picture-o "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/file-powerpoint-o" } },
                        [
                          _c("i", { staticClass: "fa fa-file-powerpoint-o" }),
                          _vm._v(" file-powerpoint-o")
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-audio-o" } }, [
                        _c("i", { staticClass: "fa fa-file-sound-o" }),
                        _vm._v(" file-sound-o "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-video-o" } }, [
                        _c("i", { staticClass: "fa fa-file-video-o" }),
                        _vm._v(" file-video-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-word-o" } }, [
                        _c("i", { staticClass: "fa fa-file-word-o" }),
                        _vm._v(" file-word-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-archive-o" } }, [
                        _c("i", { staticClass: "fa fa-file-zip-o" }),
                        _vm._v(" file-zip-o "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/film" } }, [
                        _c("i", { staticClass: "fa fa-film" }),
                        _vm._v(" film")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/filter" } }, [
                        _c("i", { staticClass: "fa fa-filter" }),
                        _vm._v(" filter")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/fire" } }, [
                        _c("i", { staticClass: "fa fa-fire" }),
                        _vm._v(" fire")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/fire-extinguisher" } },
                        [
                          _c("i", { staticClass: "fa fa-fire-extinguisher" }),
                          _vm._v(" fire-extinguisher")
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/flag" } }, [
                        _c("i", { staticClass: "fa fa-flag" }),
                        _vm._v(" flag")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/flag-checkered" } }, [
                        _c("i", { staticClass: "fa fa-flag-checkered" }),
                        _vm._v(" flag-checkered")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/flag-o" } }, [
                        _c("i", { staticClass: "fa fa-flag-o" }),
                        _vm._v(" flag-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bolt" } }, [
                        _c("i", { staticClass: "fa fa-flash" }),
                        _vm._v(" flash "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/flask" } }, [
                        _c("i", { staticClass: "fa fa-flask" }),
                        _vm._v(" flask")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/folder" } }, [
                        _c("i", { staticClass: "fa fa-folder" }),
                        _vm._v(" folder")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/folder-o" } }, [
                        _c("i", { staticClass: "fa fa-folder-o" }),
                        _vm._v(" folder-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/folder-open" } }, [
                        _c("i", { staticClass: "fa fa-folder-open" }),
                        _vm._v(" folder-open")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/folder-open-o" } }, [
                        _c("i", { staticClass: "fa fa-folder-open-o" }),
                        _vm._v(" folder-open-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/frown-o" } }, [
                        _c("i", { staticClass: "fa fa-frown-o" }),
                        _vm._v(" frown-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/gamepad" } }, [
                        _c("i", { staticClass: "fa fa-gamepad" }),
                        _vm._v(" gamepad")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/gavel" } }, [
                        _c("i", { staticClass: "fa fa-gavel" }),
                        _vm._v(" gavel")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/cog" } }, [
                        _c("i", { staticClass: "fa fa-gear" }),
                        _vm._v(" gear "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/cogs" } }, [
                        _c("i", { staticClass: "fa fa-gears" }),
                        _vm._v(" gears "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/gift" } }, [
                        _c("i", { staticClass: "fa fa-gift" }),
                        _vm._v(" gift")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/glass" } }, [
                        _c("i", { staticClass: "fa fa-glass" }),
                        _vm._v(" glass")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/globe" } }, [
                        _c("i", { staticClass: "fa fa-globe" }),
                        _vm._v(" globe")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/graduation-cap" } }, [
                        _c("i", { staticClass: "fa fa-graduation-cap" }),
                        _vm._v(" graduation-cap")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/users" } }, [
                        _c("i", { staticClass: "fa fa-group" }),
                        _vm._v(" group "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/hdd-o" } }, [
                        _c("i", { staticClass: "fa fa-hdd-o" }),
                        _vm._v(" hdd-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/headphones" } }, [
                        _c("i", { staticClass: "fa fa-headphones" }),
                        _vm._v(" headphones")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/heart" } }, [
                        _c("i", { staticClass: "fa fa-heart" }),
                        _vm._v(" heart")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/heart-o" } }, [
                        _c("i", { staticClass: "fa fa-heart-o" }),
                        _vm._v(" heart-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/history" } }, [
                        _c("i", { staticClass: "fa fa-history" }),
                        _vm._v(" history")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/home" } }, [
                        _c("i", { staticClass: "fa fa-home" }),
                        _vm._v(" home")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/picture-o" } }, [
                        _c("i", { staticClass: "fa fa-image" }),
                        _vm._v(" image "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/inbox" } }, [
                        _c("i", { staticClass: "fa fa-inbox" }),
                        _vm._v(" inbox")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/info" } }, [
                        _c("i", { staticClass: "fa fa-info" }),
                        _vm._v(" info")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/info-circle" } }, [
                        _c("i", { staticClass: "fa fa-info-circle" }),
                        _vm._v(" info-circle")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/university" } }, [
                        _c("i", { staticClass: "fa fa-institution" }),
                        _vm._v(" institution "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/key" } }, [
                        _c("i", { staticClass: "fa fa-key" }),
                        _vm._v(" key")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/keyboard-o" } }, [
                        _c("i", { staticClass: "fa fa-keyboard-o" }),
                        _vm._v(" keyboard-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/language" } }, [
                        _c("i", { staticClass: "fa fa-language" }),
                        _vm._v(" language")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/laptop" } }, [
                        _c("i", { staticClass: "fa fa-laptop" }),
                        _vm._v(" laptop")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/leaf" } }, [
                        _c("i", { staticClass: "fa fa-leaf" }),
                        _vm._v(" leaf")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/gavel" } }, [
                        _c("i", { staticClass: "fa fa-legal" }),
                        _vm._v(" legal "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/lemon-o" } }, [
                        _c("i", { staticClass: "fa fa-lemon-o" }),
                        _vm._v(" lemon-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/level-down" } }, [
                        _c("i", { staticClass: "fa fa-level-down" }),
                        _vm._v(" level-down")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/level-up" } }, [
                        _c("i", { staticClass: "fa fa-level-up" }),
                        _vm._v(" level-up")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/life-ring" } }, [
                        _c("i", { staticClass: "fa fa-life-bouy" }),
                        _vm._v(" life-bouy "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/life-ring" } }, [
                        _c("i", { staticClass: "fa fa-life-ring" }),
                        _vm._v(" life-ring")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/life-ring" } }, [
                        _c("i", { staticClass: "fa fa-life-saver" }),
                        _vm._v(" life-saver "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/lightbulb-o" } }, [
                        _c("i", { staticClass: "fa fa-lightbulb-o" }),
                        _vm._v(" lightbulb-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/location-arrow" } }, [
                        _c("i", { staticClass: "fa fa-location-arrow" }),
                        _vm._v(" location-arrow")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/lock" } }, [
                        _c("i", { staticClass: "fa fa-lock" }),
                        _vm._v(" lock")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/magic" } }, [
                        _c("i", { staticClass: "fa fa-magic" }),
                        _vm._v(" magic")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/magnet" } }, [
                        _c("i", { staticClass: "fa fa-magnet" }),
                        _vm._v(" magnet")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/share" } }, [
                        _c("i", { staticClass: "fa fa-mail-forward" }),
                        _vm._v(" mail-forward "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/reply" } }, [
                        _c("i", { staticClass: "fa fa-mail-reply" }),
                        _vm._v(" mail-reply "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/reply-all" } }, [
                        _c("i", { staticClass: "fa fa-mail-reply-all" }),
                        _vm._v(" mail-reply-all "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/male" } }, [
                        _c("i", { staticClass: "fa fa-male" }),
                        _vm._v(" male")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/map-marker" } }, [
                        _c("i", { staticClass: "fa fa-map-marker" }),
                        _vm._v(" map-marker")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/meh-o" } }, [
                        _c("i", { staticClass: "fa fa-meh-o" }),
                        _vm._v(" meh-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/microphone" } }, [
                        _c("i", { staticClass: "fa fa-microphone" }),
                        _vm._v(" microphone")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/microphone-slash" } }, [
                        _c("i", { staticClass: "fa fa-microphone-slash" }),
                        _vm._v(" microphone-slash")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/minus" } }, [
                        _c("i", { staticClass: "fa fa-minus" }),
                        _vm._v(" minus")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/minus-circle" } }, [
                        _c("i", { staticClass: "fa fa-minus-circle" }),
                        _vm._v(" minus-circle")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/minus-square" } }, [
                        _c("i", { staticClass: "fa fa-minus-square" }),
                        _vm._v(" minus-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/minus-square-o" } }, [
                        _c("i", { staticClass: "fa fa-minus-square-o" }),
                        _vm._v(" minus-square-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/mobile" } }, [
                        _c("i", { staticClass: "fa fa-mobile" }),
                        _vm._v(" mobile")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/mobile" } }, [
                        _c("i", { staticClass: "fa fa-mobile-phone" }),
                        _vm._v(" mobile-phone "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/money" } }, [
                        _c("i", { staticClass: "fa fa-money" }),
                        _vm._v(" money")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/moon-o" } }, [
                        _c("i", { staticClass: "fa fa-moon-o" }),
                        _vm._v(" moon-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/graduation-cap" } }, [
                        _c("i", { staticClass: "fa fa-mortar-board" }),
                        _vm._v(" mortar-board "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/music" } }, [
                        _c("i", { staticClass: "fa fa-music" }),
                        _vm._v(" music")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bars" } }, [
                        _c("i", { staticClass: "fa fa-navicon" }),
                        _vm._v(" navicon "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/paper-plane" } }, [
                        _c("i", { staticClass: "fa fa-paper-plane" }),
                        _vm._v(" paper-plane")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/paper-plane-o" } }, [
                        _c("i", { staticClass: "fa fa-paper-plane-o" }),
                        _vm._v(" paper-plane-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/paw" } }, [
                        _c("i", { staticClass: "fa fa-paw" }),
                        _vm._v(" paw")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/pencil" } }, [
                        _c("i", { staticClass: "fa fa-pencil" }),
                        _vm._v(" pencil")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/pencil-square" } }, [
                        _c("i", { staticClass: "fa fa-pencil-square" }),
                        _vm._v(" pencil-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/pencil-square-o" } }, [
                        _c("i", { staticClass: "fa fa-pencil-square-o" }),
                        _vm._v(" pencil-square-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/phone" } }, [
                        _c("i", { staticClass: "fa fa-phone" }),
                        _vm._v(" phone")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/phone-square" } }, [
                        _c("i", { staticClass: "fa fa-phone-square" }),
                        _vm._v(" phone-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/picture-o" } }, [
                        _c("i", { staticClass: "fa fa-photo" }),
                        _vm._v(" photo "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/picture-o" } }, [
                        _c("i", { staticClass: "fa fa-picture-o" }),
                        _vm._v(" picture-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/plane" } }, [
                        _c("i", { staticClass: "fa fa-plane" }),
                        _vm._v(" plane")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/plus" } }, [
                        _c("i", { staticClass: "fa fa-plus" }),
                        _vm._v(" plus")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/plus-circle" } }, [
                        _c("i", { staticClass: "fa fa-plus-circle" }),
                        _vm._v(" plus-circle")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/plus-square" } }, [
                        _c("i", { staticClass: "fa fa-plus-square" }),
                        _vm._v(" plus-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/plus-square-o" } }, [
                        _c("i", { staticClass: "fa fa-plus-square-o" }),
                        _vm._v(" plus-square-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/power-off" } }, [
                        _c("i", { staticClass: "fa fa-power-off" }),
                        _vm._v(" power-off")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/print" } }, [
                        _c("i", { staticClass: "fa fa-print" }),
                        _vm._v(" print")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/puzzle-piece" } }, [
                        _c("i", { staticClass: "fa fa-puzzle-piece" }),
                        _vm._v(" puzzle-piece")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/qrcode" } }, [
                        _c("i", { staticClass: "fa fa-qrcode" }),
                        _vm._v(" qrcode")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/question" } }, [
                        _c("i", { staticClass: "fa fa-question" }),
                        _vm._v(" question")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/question-circle" } }, [
                        _c("i", { staticClass: "fa fa-question-circle" }),
                        _vm._v(" question-circle")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/quote-left" } }, [
                        _c("i", { staticClass: "fa fa-quote-left" }),
                        _vm._v(" quote-left")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/quote-right" } }, [
                        _c("i", { staticClass: "fa fa-quote-right" }),
                        _vm._v(" quote-right")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/random" } }, [
                        _c("i", { staticClass: "fa fa-random" }),
                        _vm._v(" random")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/recycle" } }, [
                        _c("i", { staticClass: "fa fa-recycle" }),
                        _vm._v(" recycle")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/refresh" } }, [
                        _c("i", { staticClass: "fa fa-refresh" }),
                        _vm._v(" refresh")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bars" } }, [
                        _c("i", { staticClass: "fa fa-reorder" }),
                        _vm._v(" reorder "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/reply" } }, [
                        _c("i", { staticClass: "fa fa-reply" }),
                        _vm._v(" reply")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/reply-all" } }, [
                        _c("i", { staticClass: "fa fa-reply-all" }),
                        _vm._v(" reply-all")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/retweet" } }, [
                        _c("i", { staticClass: "fa fa-retweet" }),
                        _vm._v(" retweet")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/road" } }, [
                        _c("i", { staticClass: "fa fa-road" }),
                        _vm._v(" road")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/rocket" } }, [
                        _c("i", { staticClass: "fa fa-rocket" }),
                        _vm._v(" rocket")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/rss" } }, [
                        _c("i", { staticClass: "fa fa-rss" }),
                        _vm._v(" rss")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/rss-square" } }, [
                        _c("i", { staticClass: "fa fa-rss-square" }),
                        _vm._v(" rss-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/search" } }, [
                        _c("i", { staticClass: "fa fa-search" }),
                        _vm._v(" search")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/search-minus" } }, [
                        _c("i", { staticClass: "fa fa-search-minus" }),
                        _vm._v(" search-minus")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/search-plus" } }, [
                        _c("i", { staticClass: "fa fa-search-plus" }),
                        _vm._v(" search-plus")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/paper-plane" } }, [
                        _c("i", { staticClass: "fa fa-send" }),
                        _vm._v(" send "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/paper-plane-o" } }, [
                        _c("i", { staticClass: "fa fa-send-o" }),
                        _vm._v(" send-o "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/share" } }, [
                        _c("i", { staticClass: "fa fa-share" }),
                        _vm._v(" share")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/share-alt" } }, [
                        _c("i", { staticClass: "fa fa-share-alt" }),
                        _vm._v(" share-alt")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/share-alt-square" } }, [
                        _c("i", { staticClass: "fa fa-share-alt-square" }),
                        _vm._v(" share-alt-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/share-square" } }, [
                        _c("i", { staticClass: "fa fa-share-square" }),
                        _vm._v(" share-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/share-square-o" } }, [
                        _c("i", { staticClass: "fa fa-share-square-o" }),
                        _vm._v(" share-square-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/shield" } }, [
                        _c("i", { staticClass: "fa fa-shield" }),
                        _vm._v(" shield")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/shopping-cart" } }, [
                        _c("i", { staticClass: "fa fa-shopping-cart" }),
                        _vm._v(" shopping-cart")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/sign-in" } }, [
                        _c("i", { staticClass: "fa fa-sign-in" }),
                        _vm._v(" sign-in")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/sign-out" } }, [
                        _c("i", { staticClass: "fa fa-sign-out" }),
                        _vm._v(" sign-out")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/signal" } }, [
                        _c("i", { staticClass: "fa fa-signal" }),
                        _vm._v(" signal")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/sitemap" } }, [
                        _c("i", { staticClass: "fa fa-sitemap" }),
                        _vm._v(" sitemap")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/sliders" } }, [
                        _c("i", { staticClass: "fa fa-sliders" }),
                        _vm._v(" sliders")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/smile-o" } }, [
                        _c("i", { staticClass: "fa fa-smile-o" }),
                        _vm._v(" smile-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/sort" } }, [
                        _c("i", { staticClass: "fa fa-sort" }),
                        _vm._v(" sort")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/sort-alpha-asc" } }, [
                        _c("i", { staticClass: "fa fa-sort-alpha-asc" }),
                        _vm._v(" sort-alpha-asc")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/sort-alpha-desc" } }, [
                        _c("i", { staticClass: "fa fa-sort-alpha-desc" }),
                        _vm._v(" sort-alpha-desc")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/sort-amount-asc" } }, [
                        _c("i", { staticClass: "fa fa-sort-amount-asc" }),
                        _vm._v(" sort-amount-asc")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/sort-amount-desc" } }, [
                        _c("i", { staticClass: "fa fa-sort-amount-desc" }),
                        _vm._v(" sort-amount-desc")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/sort-asc" } }, [
                        _c("i", { staticClass: "fa fa-sort-asc" }),
                        _vm._v(" sort-asc")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/sort-desc" } }, [
                        _c("i", { staticClass: "fa fa-sort-desc" }),
                        _vm._v(" sort-desc")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/sort-desc" } }, [
                        _c("i", { staticClass: "fa fa-sort-down" }),
                        _vm._v(" sort-down "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/sort-numeric-asc" } }, [
                        _c("i", { staticClass: "fa fa-sort-numeric-asc" }),
                        _vm._v(" sort-numeric-asc")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/sort-numeric-desc" } },
                        [
                          _c("i", { staticClass: "fa fa-sort-numeric-desc" }),
                          _vm._v(" sort-numeric-desc")
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/sort-asc" } }, [
                        _c("i", { staticClass: "fa fa-sort-up" }),
                        _vm._v(" sort-up "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/space-shuttle" } }, [
                        _c("i", { staticClass: "fa fa-space-shuttle" }),
                        _vm._v(" space-shuttle")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/spinner" } }, [
                        _c("i", { staticClass: "fa fa-spinner" }),
                        _vm._v(" spinner")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/spoon" } }, [
                        _c("i", { staticClass: "fa fa-spoon" }),
                        _vm._v(" spoon")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/square" } }, [
                        _c("i", { staticClass: "fa fa-square" }),
                        _vm._v(" square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/square-o" } }, [
                        _c("i", { staticClass: "fa fa-square-o" }),
                        _vm._v(" square-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/star" } }, [
                        _c("i", { staticClass: "fa fa-star" }),
                        _vm._v(" star")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/star-half" } }, [
                        _c("i", { staticClass: "fa fa-star-half" }),
                        _vm._v(" star-half")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/star-half-o" } }, [
                        _c("i", { staticClass: "fa fa-star-half-empty" }),
                        _vm._v(" star-half-empty "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/star-half-o" } }, [
                        _c("i", { staticClass: "fa fa-star-half-full" }),
                        _vm._v(" star-half-full "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/star-half-o" } }, [
                        _c("i", { staticClass: "fa fa-star-half-o" }),
                        _vm._v(" star-half-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/star-o" } }, [
                        _c("i", { staticClass: "fa fa-star-o" }),
                        _vm._v(" star-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/suitcase" } }, [
                        _c("i", { staticClass: "fa fa-suitcase" }),
                        _vm._v(" suitcase")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/sun-o" } }, [
                        _c("i", { staticClass: "fa fa-sun-o" }),
                        _vm._v(" sun-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/life-ring" } }, [
                        _c("i", { staticClass: "fa fa-support" }),
                        _vm._v(" support "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/tablet" } }, [
                        _c("i", { staticClass: "fa fa-tablet" }),
                        _vm._v(" tablet")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/tachometer" } }, [
                        _c("i", { staticClass: "fa fa-tachometer" }),
                        _vm._v(" tachometer")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/tag" } }, [
                        _c("i", { staticClass: "fa fa-tag" }),
                        _vm._v(" tag")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/tags" } }, [
                        _c("i", { staticClass: "fa fa-tags" }),
                        _vm._v(" tags")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/tasks" } }, [
                        _c("i", { staticClass: "fa fa-tasks" }),
                        _vm._v(" tasks")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/taxi" } }, [
                        _c("i", { staticClass: "fa fa-taxi" }),
                        _vm._v(" taxi")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/terminal" } }, [
                        _c("i", { staticClass: "fa fa-terminal" }),
                        _vm._v(" terminal")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/thumb-tack" } }, [
                        _c("i", { staticClass: "fa fa-thumb-tack" }),
                        _vm._v(" thumb-tack")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/thumbs-down" } }, [
                        _c("i", { staticClass: "fa fa-thumbs-down" }),
                        _vm._v(" thumbs-down")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/thumbs-o-down" } }, [
                        _c("i", { staticClass: "fa fa-thumbs-o-down" }),
                        _vm._v(" thumbs-o-down")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/thumbs-o-up" } }, [
                        _c("i", { staticClass: "fa fa-thumbs-o-up" }),
                        _vm._v(" thumbs-o-up")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/thumbs-up" } }, [
                        _c("i", { staticClass: "fa fa-thumbs-up" }),
                        _vm._v(" thumbs-up")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/ticket" } }, [
                        _c("i", { staticClass: "fa fa-ticket" }),
                        _vm._v(" ticket")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/times" } }, [
                        _c("i", { staticClass: "fa fa-times" }),
                        _vm._v(" times")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/times-circle" } }, [
                        _c("i", { staticClass: "fa fa-times-circle" }),
                        _vm._v(" times-circle")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/times-circle-o" } }, [
                        _c("i", { staticClass: "fa fa-times-circle-o" }),
                        _vm._v(" times-circle-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/tint" } }, [
                        _c("i", { staticClass: "fa fa-tint" }),
                        _vm._v(" tint")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/caret-square-o-down" } },
                        [
                          _c("i", { staticClass: "fa fa-toggle-down" }),
                          _vm._v(" toggle-down "),
                          _c("span", { staticClass: "text-muted" }, [
                            _vm._v("(alias)")
                          ])
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/caret-square-o-left" } },
                        [
                          _c("i", { staticClass: "fa fa-toggle-left" }),
                          _vm._v(" toggle-left "),
                          _c("span", { staticClass: "text-muted" }, [
                            _vm._v("(alias)")
                          ])
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/caret-square-o-right" } },
                        [
                          _c("i", { staticClass: "fa fa-toggle-right" }),
                          _vm._v(" toggle-right "),
                          _c("span", { staticClass: "text-muted" }, [
                            _vm._v("(alias)")
                          ])
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/caret-square-o-up" } },
                        [
                          _c("i", { staticClass: "fa fa-toggle-up" }),
                          _vm._v(" toggle-up "),
                          _c("span", { staticClass: "text-muted" }, [
                            _vm._v("(alias)")
                          ])
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/trash-o" } }, [
                        _c("i", { staticClass: "fa fa-trash-o" }),
                        _vm._v(" trash-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/tree" } }, [
                        _c("i", { staticClass: "fa fa-tree" }),
                        _vm._v(" tree")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/trophy" } }, [
                        _c("i", { staticClass: "fa fa-trophy" }),
                        _vm._v(" trophy")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/truck" } }, [
                        _c("i", { staticClass: "fa fa-truck" }),
                        _vm._v(" truck")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/umbrella" } }, [
                        _c("i", { staticClass: "fa fa-umbrella" }),
                        _vm._v(" umbrella")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/university" } }, [
                        _c("i", { staticClass: "fa fa-university" }),
                        _vm._v(" university")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/unlock" } }, [
                        _c("i", { staticClass: "fa fa-unlock" }),
                        _vm._v(" unlock")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/unlock-alt" } }, [
                        _c("i", { staticClass: "fa fa-unlock-alt" }),
                        _vm._v(" unlock-alt")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/sort" } }, [
                        _c("i", { staticClass: "fa fa-unsorted" }),
                        _vm._v(" unsorted "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/upload" } }, [
                        _c("i", { staticClass: "fa fa-upload" }),
                        _vm._v(" upload")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/user" } }, [
                        _c("i", { staticClass: "fa fa-user" }),
                        _vm._v(" user")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/users" } }, [
                        _c("i", { staticClass: "fa fa-users" }),
                        _vm._v(" users")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/video-camera" } }, [
                        _c("i", { staticClass: "fa fa-video-camera" }),
                        _vm._v(" video-camera")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/volume-down" } }, [
                        _c("i", { staticClass: "fa fa-volume-down" }),
                        _vm._v(" volume-down")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/volume-off" } }, [
                        _c("i", { staticClass: "fa fa-volume-off" }),
                        _vm._v(" volume-off")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/volume-up" } }, [
                        _c("i", { staticClass: "fa fa-volume-up" }),
                        _vm._v(" volume-up")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/exclamation-triangle" } },
                        [
                          _c("i", { staticClass: "fa fa-warning" }),
                          _vm._v(" warning "),
                          _c("span", { staticClass: "text-muted" }, [
                            _vm._v("(alias)")
                          ])
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/wheelchair" } }, [
                        _c("i", { staticClass: "fa fa-wheelchair" }),
                        _vm._v(" wheelchair")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/wrench" } }, [
                        _c("i", { staticClass: "fa fa-wrench" }),
                        _vm._v(" wrench")
                      ])
                    ]
                  )
                ],
                1
              )
            ],
            1
          ),
          _c(
            "b-tab",
            { attrs: { title: "Spinner" } },
            [
              _c(
                "b-row",
                { staticClass: "icon-list" },
                [
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/circle-o-notch" } }, [
                        _c("i", { staticClass: "fa fa-circle-o-notch" }),
                        _vm._v(" circle-o-notch")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/cog" } }, [
                        _c("i", { staticClass: "fa fa-cog" }),
                        _vm._v(" cog")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/cog" } }, [
                        _c("i", { staticClass: "fa fa-gear" }),
                        _vm._v(" gear "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/refresh" } }, [
                        _c("i", { staticClass: "fa fa-refresh" }),
                        _vm._v(" refresh")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/spinner" } }, [
                        _c("i", { staticClass: "fa fa-spinner" }),
                        _vm._v(" spinner")
                      ])
                    ]
                  )
                ],
                1
              )
            ],
            1
          ),
          _c(
            "b-tab",
            { attrs: { title: "Text Editor" } },
            [
              _c(
                "b-row",
                { staticClass: "icon-list" },
                [
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/align-center" } }, [
                        _c("i", { staticClass: "fa fa-align-center" }),
                        _vm._v(" align-center")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/align-justify" } }, [
                        _c("i", { staticClass: "fa fa-align-justify" }),
                        _vm._v(" align-justify")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/align-left" } }, [
                        _c("i", { staticClass: "fa fa-align-left" }),
                        _vm._v(" align-left")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/align-right" } }, [
                        _c("i", { staticClass: "fa fa-align-right" }),
                        _vm._v(" align-right")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bold" } }, [
                        _c("i", { staticClass: "fa fa-bold" }),
                        _vm._v(" bold")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/link" } }, [
                        _c("i", { staticClass: "fa fa-chain" }),
                        _vm._v(" chain "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/chain-broken" } }, [
                        _c("i", { staticClass: "fa fa-chain-broken" }),
                        _vm._v(" chain-broken")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/clipboard" } }, [
                        _c("i", { staticClass: "fa fa-clipboard" }),
                        _vm._v(" clipboard")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/columns" } }, [
                        _c("i", { staticClass: "fa fa-columns" }),
                        _vm._v(" columns")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/files-o" } }, [
                        _c("i", { staticClass: "fa fa-copy" }),
                        _vm._v(" copy "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/scissors" } }, [
                        _c("i", { staticClass: "fa fa-cut" }),
                        _vm._v(" cut "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/outdent" } }, [
                        _c("i", { staticClass: "fa fa-dedent" }),
                        _vm._v(" dedent "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/eraser" } }, [
                        _c("i", { staticClass: "fa fa-eraser" }),
                        _vm._v(" eraser")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file" } }, [
                        _c("i", { staticClass: "fa fa-file" }),
                        _vm._v(" file")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-o" } }, [
                        _c("i", { staticClass: "fa fa-file-o" }),
                        _vm._v(" file-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-text" } }, [
                        _c("i", { staticClass: "fa fa-file-text" }),
                        _vm._v(" file-text")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-text-o" } }, [
                        _c("i", { staticClass: "fa fa-file-text-o" }),
                        _vm._v(" file-text-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/files-o" } }, [
                        _c("i", { staticClass: "fa fa-files-o" }),
                        _vm._v(" files-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/floppy-o" } }, [
                        _c("i", { staticClass: "fa fa-floppy-o" }),
                        _vm._v(" floppy-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/font" } }, [
                        _c("i", { staticClass: "fa fa-font" }),
                        _vm._v(" font")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/header" } }, [
                        _c("i", { staticClass: "fa fa-header" }),
                        _vm._v(" header")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/indent" } }, [
                        _c("i", { staticClass: "fa fa-indent" }),
                        _vm._v(" indent")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/italic" } }, [
                        _c("i", { staticClass: "fa fa-italic" }),
                        _vm._v(" italic")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/link" } }, [
                        _c("i", { staticClass: "fa fa-link" }),
                        _vm._v(" link")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/list" } }, [
                        _c("i", { staticClass: "fa fa-list" }),
                        _vm._v(" list")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/list-alt" } }, [
                        _c("i", { staticClass: "fa fa-list-alt" }),
                        _vm._v(" list-alt")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/list-ol" } }, [
                        _c("i", { staticClass: "fa fa-list-ol" }),
                        _vm._v(" list-ol")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/list-ul" } }, [
                        _c("i", { staticClass: "fa fa-list-ul" }),
                        _vm._v(" list-ul")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/outdent" } }, [
                        _c("i", { staticClass: "fa fa-outdent" }),
                        _vm._v(" outdent")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/paperclip" } }, [
                        _c("i", { staticClass: "fa fa-paperclip" }),
                        _vm._v(" paperclip")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/paragraph" } }, [
                        _c("i", { staticClass: "fa fa-paragraph" }),
                        _vm._v(" paragraph")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/clipboard" } }, [
                        _c("i", { staticClass: "fa fa-paste" }),
                        _vm._v(" paste "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/repeat" } }, [
                        _c("i", { staticClass: "fa fa-repeat" }),
                        _vm._v(" repeat")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/undo" } }, [
                        _c("i", { staticClass: "fa fa-rotate-left" }),
                        _vm._v(" rotate-left "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/repeat" } }, [
                        _c("i", { staticClass: "fa fa-rotate-right" }),
                        _vm._v(" rotate-right "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/floppy-o" } }, [
                        _c("i", { staticClass: "fa fa-save" }),
                        _vm._v(" save "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/scissors" } }, [
                        _c("i", { staticClass: "fa fa-scissors" }),
                        _vm._v(" scissors")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/strikethrough" } }, [
                        _c("i", { staticClass: "fa fa-strikethrough" }),
                        _vm._v(" strikethrough")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/subscript" } }, [
                        _c("i", { staticClass: "fa fa-subscript" }),
                        _vm._v(" subscript")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/superscript" } }, [
                        _c("i", { staticClass: "fa fa-superscript" }),
                        _vm._v(" superscript")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/table" } }, [
                        _c("i", { staticClass: "fa fa-table" }),
                        _vm._v(" table")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/text-height" } }, [
                        _c("i", { staticClass: "fa fa-text-height" }),
                        _vm._v(" text-height")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/text-width" } }, [
                        _c("i", { staticClass: "fa fa-text-width" }),
                        _vm._v(" text-width")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/th" } }, [
                        _c("i", { staticClass: "fa fa-th" }),
                        _vm._v(" th")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/th-large" } }, [
                        _c("i", { staticClass: "fa fa-th-large" }),
                        _vm._v(" th-large")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/th-list" } }, [
                        _c("i", { staticClass: "fa fa-th-list" }),
                        _vm._v(" th-list")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/underline" } }, [
                        _c("i", { staticClass: "fa fa-underline" }),
                        _vm._v(" underline")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/undo" } }, [
                        _c("i", { staticClass: "fa fa-undo" }),
                        _vm._v(" undo")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { md: "4", lg: "3", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/chain-broken" } }, [
                        _c("i", { staticClass: "fa fa-unlink" }),
                        _vm._v(" unlink "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  )
                ],
                1
              )
            ],
            1
          ),
          _c(
            "b-tab",
            { attrs: { title: "Brand" } },
            [
              _c(
                "b-row",
                { staticClass: "icon-list" },
                [
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/adn" } }, [
                        _c("i", { staticClass: "fa fa-adn" }),
                        _vm._v(" adn")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/android" } }, [
                        _c("i", { staticClass: "fa fa-android" }),
                        _vm._v(" android")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/apple" } }, [
                        _c("i", { staticClass: "fa fa-apple" }),
                        _vm._v(" apple")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/behance" } }, [
                        _c("i", { staticClass: "fa fa-behance" }),
                        _vm._v(" behance")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/behance-square" } }, [
                        _c("i", { staticClass: "fa fa-behance-square" }),
                        _vm._v(" behance-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bitbucket" } }, [
                        _c("i", { staticClass: "fa fa-bitbucket" }),
                        _vm._v(" bitbucket")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/bitbucket-square" } }, [
                        _c("i", { staticClass: "fa fa-bitbucket-square" }),
                        _vm._v(" bitbucket-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/btc" } }, [
                        _c("i", { staticClass: "fa fa-bitcoin" }),
                        _vm._v(" bitcoin "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/btc" } }, [
                        _c("i", { staticClass: "fa fa-btc" }),
                        _vm._v(" btc")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/codepen" } }, [
                        _c("i", { staticClass: "fa fa-codepen" }),
                        _vm._v(" codepen")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/css3" } }, [
                        _c("i", { staticClass: "fa fa-css3" }),
                        _vm._v(" css3")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/delicious" } }, [
                        _c("i", { staticClass: "fa fa-delicious" }),
                        _vm._v(" delicious")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/deviantart" } }, [
                        _c("i", { staticClass: "fa fa-deviantart" }),
                        _vm._v(" deviantart")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/digg" } }, [
                        _c("i", { staticClass: "fa fa-digg" }),
                        _vm._v(" digg")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/dribbble" } }, [
                        _c("i", { staticClass: "fa fa-dribbble" }),
                        _vm._v(" dribbble")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/dropbox" } }, [
                        _c("i", { staticClass: "fa fa-dropbox" }),
                        _vm._v(" dropbox")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/drupal" } }, [
                        _c("i", { staticClass: "fa fa-drupal" }),
                        _vm._v(" drupal")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/empire" } }, [
                        _c("i", { staticClass: "fa fa-empire" }),
                        _vm._v(" empire")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/facebook" } }, [
                        _c("i", { staticClass: "fa fa-facebook" }),
                        _vm._v(" facebook")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/facebook-square" } }, [
                        _c("i", { staticClass: "fa fa-facebook-square" }),
                        _vm._v(" facebook-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/flickr" } }, [
                        _c("i", { staticClass: "fa fa-flickr" }),
                        _vm._v(" flickr")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/foursquare" } }, [
                        _c("i", { staticClass: "fa fa-foursquare" }),
                        _vm._v(" foursquare")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/empire" } }, [
                        _c("i", { staticClass: "fa fa-ge" }),
                        _vm._v(" ge "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/git" } }, [
                        _c("i", { staticClass: "fa fa-git" }),
                        _vm._v(" git")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/git-square" } }, [
                        _c("i", { staticClass: "fa fa-git-square" }),
                        _vm._v(" git-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/github" } }, [
                        _c("i", { staticClass: "fa fa-github" }),
                        _vm._v(" github")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/github-alt" } }, [
                        _c("i", { staticClass: "fa fa-github-alt" }),
                        _vm._v(" github-alt")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/github-square" } }, [
                        _c("i", { staticClass: "fa fa-github-square" }),
                        _vm._v(" github-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/gittip" } }, [
                        _c("i", { staticClass: "fa fa-gittip" }),
                        _vm._v(" gittip")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/google" } }, [
                        _c("i", { staticClass: "fa fa-google" }),
                        _vm._v(" google")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/google-plus" } }, [
                        _c("i", { staticClass: "fa fa-google-plus" }),
                        _vm._v(" google-plus")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/google-plus-square" } },
                        [
                          _c("i", { staticClass: "fa fa-google-plus-square" }),
                          _vm._v(" google-plus-square")
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/hacker-news" } }, [
                        _c("i", { staticClass: "fa fa-hacker-news" }),
                        _vm._v(" hacker-news")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/html5" } }, [
                        _c("i", { staticClass: "fa fa-html5" }),
                        _vm._v(" html5")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/instagram" } }, [
                        _c("i", { staticClass: "fa fa-instagram" }),
                        _vm._v(" instagram")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/joomla" } }, [
                        _c("i", { staticClass: "fa fa-joomla" }),
                        _vm._v(" joomla")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/jsfiddle" } }, [
                        _c("i", { staticClass: "fa fa-jsfiddle" }),
                        _vm._v(" jsfiddle")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/linkedin" } }, [
                        _c("i", { staticClass: "fa fa-linkedin" }),
                        _vm._v(" linkedin")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/linkedin-square" } }, [
                        _c("i", { staticClass: "fa fa-linkedin-square" }),
                        _vm._v(" linkedin-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/linux" } }, [
                        _c("i", { staticClass: "fa fa-linux" }),
                        _vm._v(" linux")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/maxcdn" } }, [
                        _c("i", { staticClass: "fa fa-maxcdn" }),
                        _vm._v(" maxcdn")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/openid" } }, [
                        _c("i", { staticClass: "fa fa-openid" }),
                        _vm._v(" openid")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/pagelines" } }, [
                        _c("i", { staticClass: "fa fa-pagelines" }),
                        _vm._v(" pagelines")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/pied-piper" } }, [
                        _c("i", { staticClass: "fa fa-pied-piper" }),
                        _vm._v(" pied-piper")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/pied-piper-alt" } }, [
                        _c("i", { staticClass: "fa fa-pied-piper-alt" }),
                        _vm._v(" pied-piper-alt")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/pied-piper" } }, [
                        _c("i", { staticClass: "fa fa-pied-piper-square" }),
                        _vm._v(" pied-piper-square "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/pinterest" } }, [
                        _c("i", { staticClass: "fa fa-pinterest" }),
                        _vm._v(" pinterest")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/pinterest-square" } }, [
                        _c("i", { staticClass: "fa fa-pinterest-square" }),
                        _vm._v(" pinterest-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/qq" } }, [
                        _c("i", { staticClass: "fa fa-qq" }),
                        _vm._v(" qq")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/rebel" } }, [
                        _c("i", { staticClass: "fa fa-ra" }),
                        _vm._v(" ra "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/rebel" } }, [
                        _c("i", { staticClass: "fa fa-rebel" }),
                        _vm._v(" rebel")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/reddit" } }, [
                        _c("i", { staticClass: "fa fa-reddit" }),
                        _vm._v(" reddit")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/reddit-square" } }, [
                        _c("i", { staticClass: "fa fa-reddit-square" }),
                        _vm._v(" reddit-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/renren" } }, [
                        _c("i", { staticClass: "fa fa-renren" }),
                        _vm._v(" renren")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/share-alt" } }, [
                        _c("i", { staticClass: "fa fa-share-alt" }),
                        _vm._v(" share-alt")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/share-alt-square" } }, [
                        _c("i", { staticClass: "fa fa-share-alt-square" }),
                        _vm._v(" share-alt-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/skype" } }, [
                        _c("i", { staticClass: "fa fa-skype" }),
                        _vm._v(" skype")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/slack" } }, [
                        _c("i", { staticClass: "fa fa-slack" }),
                        _vm._v(" slack")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/soundcloud" } }, [
                        _c("i", { staticClass: "fa fa-soundcloud" }),
                        _vm._v(" soundcloud")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/spotify" } }, [
                        _c("i", { staticClass: "fa fa-spotify" }),
                        _vm._v(" spotify")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/stack-exchange" } }, [
                        _c("i", { staticClass: "fa fa-stack-exchange" }),
                        _vm._v(" stack-exchange")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/stack-overflow" } }, [
                        _c("i", { staticClass: "fa fa-stack-overflow" }),
                        _vm._v(" stack-overflow")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/steam" } }, [
                        _c("i", { staticClass: "fa fa-steam" }),
                        _vm._v(" steam")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/steam-square" } }, [
                        _c("i", { staticClass: "fa fa-steam-square" }),
                        _vm._v(" steam-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/stumbleupon" } }, [
                        _c("i", { staticClass: "fa fa-stumbleupon" }),
                        _vm._v(" stumbleupon")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/stumbleupon-circle" } },
                        [
                          _c("i", { staticClass: "fa fa-stumbleupon-circle" }),
                          _vm._v(" stumbleupon-circle")
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/tencent-weibo" } }, [
                        _c("i", { staticClass: "fa fa-tencent-weibo" }),
                        _vm._v(" tencent-weibo")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/trello" } }, [
                        _c("i", { staticClass: "fa fa-trello" }),
                        _vm._v(" trello")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/tumblr" } }, [
                        _c("i", { staticClass: "fa fa-tumblr" }),
                        _vm._v(" tumblr")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/tumblr-square" } }, [
                        _c("i", { staticClass: "fa fa-tumblr-square" }),
                        _vm._v(" tumblr-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/twitter" } }, [
                        _c("i", { staticClass: "fa fa-twitter" }),
                        _vm._v(" twitter")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/twitter-square" } }, [
                        _c("i", { staticClass: "fa fa-twitter-square" }),
                        _vm._v(" twitter-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/vimeo-square" } }, [
                        _c("i", { staticClass: "fa fa-vimeo-square" }),
                        _vm._v(" vimeo-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/vine" } }, [
                        _c("i", { staticClass: "fa fa-vine" }),
                        _vm._v(" vine")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/vk" } }, [
                        _c("i", { staticClass: "fa fa-vk" }),
                        _vm._v(" vk")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/weixin" } }, [
                        _c("i", { staticClass: "fa fa-wechat" }),
                        _vm._v(" wechat "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/weibo" } }, [
                        _c("i", { staticClass: "fa fa-weibo" }),
                        _vm._v(" weibo")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/weixin" } }, [
                        _c("i", { staticClass: "fa fa-weixin" }),
                        _vm._v(" weixin")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/windows" } }, [
                        _c("i", { staticClass: "fa fa-windows" }),
                        _vm._v(" windows")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/wordpress" } }, [
                        _c("i", { staticClass: "fa fa-wordpress" }),
                        _vm._v(" wordpress")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/xing" } }, [
                        _c("i", { staticClass: "fa fa-xing" }),
                        _vm._v(" xing")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/xing-square" } }, [
                        _c("i", { staticClass: "fa fa-xing-square" }),
                        _vm._v(" xing-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/yahoo" } }, [
                        _c("i", { staticClass: "fa fa-yahoo" }),
                        _vm._v(" yahoo")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/youtube" } }, [
                        _c("i", { staticClass: "fa fa-youtube" }),
                        _vm._v(" youtube")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/youtube-play" } }, [
                        _c("i", { staticClass: "fa fa-youtube-play" }),
                        _vm._v(" youtube-play")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/youtube-square" } }, [
                        _c("i", { staticClass: "fa fa-youtube-square" }),
                        _vm._v(" youtube-square")
                      ])
                    ]
                  )
                ],
                1
              )
            ],
            1
          ),
          _c(
            "b-tab",
            { attrs: { title: "Other" } },
            [
              _c("h4", [
                _vm._v("File Type "),
                _c("span", { staticClass: "fw-semi-bold" }, [_vm._v("Icons")])
              ]),
              _c(
                "b-row",
                { staticClass: "icon-list" },
                [
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file" } }, [
                        _c("i", { staticClass: "fa fa-file" }),
                        _vm._v(" file")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-archive-o" } }, [
                        _c("i", { staticClass: "fa fa-file-archive-o" }),
                        _vm._v(" file-archive-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-audio-o" } }, [
                        _c("i", { staticClass: "fa fa-file-audio-o" }),
                        _vm._v(" file-audio-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-code-o" } }, [
                        _c("i", { staticClass: "fa fa-file-code-o" }),
                        _vm._v(" file-code-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-excel-o" } }, [
                        _c("i", { staticClass: "fa fa-file-excel-o" }),
                        _vm._v(" file-excel-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-image-o" } }, [
                        _c("i", { staticClass: "fa fa-file-image-o" }),
                        _vm._v(" file-image-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-video-o" } }, [
                        _c("i", { staticClass: "fa fa-file-movie-o" }),
                        _vm._v(" file-movie-o "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-o" } }, [
                        _c("i", { staticClass: "fa fa-file-o" }),
                        _vm._v(" file-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-pdf-o" } }, [
                        _c("i", { staticClass: "fa fa-file-pdf-o" }),
                        _vm._v(" file-pdf-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-image-o" } }, [
                        _c("i", { staticClass: "fa fa-file-photo-o" }),
                        _vm._v(" file-photo-o "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-image-o" } }, [
                        _c("i", { staticClass: "fa fa-file-picture-o" }),
                        _vm._v(" file-picture-o "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "../icon/file-powerpoint-o" } },
                        [
                          _c("i", { staticClass: "fa fa-file-powerpoint-o" }),
                          _vm._v(" file-powerpoint-o")
                        ]
                      )
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-audio-o" } }, [
                        _c("i", { staticClass: "fa fa-file-sound-o" }),
                        _vm._v(" file-sound-o "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-text" } }, [
                        _c("i", { staticClass: "fa fa-file-text" }),
                        _vm._v(" file-text")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-text-o" } }, [
                        _c("i", { staticClass: "fa fa-file-text-o" }),
                        _vm._v(" file-text-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-video-o" } }, [
                        _c("i", { staticClass: "fa fa-file-video-o" }),
                        _vm._v(" file-video-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-word-o" } }, [
                        _c("i", { staticClass: "fa fa-file-word-o" }),
                        _vm._v(" file-word-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/file-archive-o" } }, [
                        _c("i", { staticClass: "fa fa-file-zip-o" }),
                        _vm._v(" file-zip-o "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  )
                ],
                1
              ),
              _c("h4", [
                _vm._v("Form Control "),
                _c("span", { staticClass: "fw-semi-bold" }, [_vm._v("Icons")])
              ]),
              _c(
                "b-row",
                { staticClass: "icon-list" },
                [
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/check-square" } }, [
                        _c("i", { staticClass: "fa fa-check-square" }),
                        _vm._v(" check-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/check-square-o" } }, [
                        _c("i", { staticClass: "fa fa-check-square-o" }),
                        _vm._v(" check-square-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/circle" } }, [
                        _c("i", { staticClass: "fa fa-circle" }),
                        _vm._v(" circle")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/circle-o" } }, [
                        _c("i", { staticClass: "fa fa-circle-o" }),
                        _vm._v(" circle-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/dot-circle-o" } }, [
                        _c("i", { staticClass: "fa fa-dot-circle-o" }),
                        _vm._v(" dot-circle-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/minus-square" } }, [
                        _c("i", { staticClass: "fa fa-minus-square" }),
                        _vm._v(" minus-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/minus-square-o" } }, [
                        _c("i", { staticClass: "fa fa-minus-square-o" }),
                        _vm._v(" minus-square-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/plus-square" } }, [
                        _c("i", { staticClass: "fa fa-plus-square" }),
                        _vm._v(" plus-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/plus-square-o" } }, [
                        _c("i", { staticClass: "fa fa-plus-square-o" }),
                        _vm._v(" plus-square-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/square" } }, [
                        _c("i", { staticClass: "fa fa-square" }),
                        _vm._v(" square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/square-o" } }, [
                        _c("i", { staticClass: "fa fa-square-o" }),
                        _vm._v(" square-o")
                      ])
                    ]
                  )
                ],
                1
              ),
              _c("h4", [
                _vm._v("Currency "),
                _c("span", { staticClass: "fw-semi-bold" }, [_vm._v("Icons")])
              ]),
              _c(
                "b-row",
                { staticClass: "icon-list" },
                [
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/btc" } }, [
                        _c("i", { staticClass: "fa fa-bitcoin" }),
                        _vm._v(" bitcoin "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/btc" } }, [
                        _c("i", { staticClass: "fa fa-btc" }),
                        _vm._v(" btc")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/jpy" } }, [
                        _c("i", { staticClass: "fa fa-cny" }),
                        _vm._v(" cny "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/usd" } }, [
                        _c("i", { staticClass: "fa fa-dollar" }),
                        _vm._v(" dollar "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/eur" } }, [
                        _c("i", { staticClass: "fa fa-eur" }),
                        _vm._v(" eur")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/eur" } }, [
                        _c("i", { staticClass: "fa fa-euro" }),
                        _vm._v(" euro "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/gbp" } }, [
                        _c("i", { staticClass: "fa fa-gbp" }),
                        _vm._v(" gbp")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/inr" } }, [
                        _c("i", { staticClass: "fa fa-inr" }),
                        _vm._v(" inr")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/jpy" } }, [
                        _c("i", { staticClass: "fa fa-jpy" }),
                        _vm._v(" jpy")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/krw" } }, [
                        _c("i", { staticClass: "fa fa-krw" }),
                        _vm._v(" krw")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/money" } }, [
                        _c("i", { staticClass: "fa fa-money" }),
                        _vm._v(" money")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/jpy" } }, [
                        _c("i", { staticClass: "fa fa-rmb" }),
                        _vm._v(" rmb "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/rub" } }, [
                        _c("i", { staticClass: "fa fa-rouble" }),
                        _vm._v(" rouble "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/rub" } }, [
                        _c("i", { staticClass: "fa fa-rub" }),
                        _vm._v(" rub")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/rub" } }, [
                        _c("i", { staticClass: "fa fa-ruble" }),
                        _vm._v(" ruble "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/inr" } }, [
                        _c("i", { staticClass: "fa fa-rupee" }),
                        _vm._v(" rupee "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/try" } }, [
                        _c("i", { staticClass: "fa fa-try" }),
                        _vm._v(" try")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/try" } }, [
                        _c("i", { staticClass: "fa fa-turkish-lira" }),
                        _vm._v(" turkish-lira "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/usd" } }, [
                        _c("i", { staticClass: "fa fa-usd" }),
                        _vm._v(" usd")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/krw" } }, [
                        _c("i", { staticClass: "fa fa-won" }),
                        _vm._v(" won "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/jpy" } }, [
                        _c("i", { staticClass: "fa fa-yen" }),
                        _vm._v(" yen "),
                        _c("span", { staticClass: "text-muted" }, [
                          _vm._v("(alias)")
                        ])
                      ])
                    ]
                  )
                ],
                1
              ),
              _c("h4", [
                _vm._v("Video Player "),
                _c("span", { staticClass: "fw-semi-bold" }, [_vm._v("Icons")])
              ]),
              _c(
                "b-row",
                { staticClass: "icon-list" },
                [
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/arrows-alt" } }, [
                        _c("i", { staticClass: "fa fa-arrows-alt" }),
                        _vm._v(" arrows-alt")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/backward" } }, [
                        _c("i", { staticClass: "fa fa-backward" }),
                        _vm._v(" backward")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/compress" } }, [
                        _c("i", { staticClass: "fa fa-compress" }),
                        _vm._v(" compress")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/eject" } }, [
                        _c("i", { staticClass: "fa fa-eject" }),
                        _vm._v(" eject")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/expand" } }, [
                        _c("i", { staticClass: "fa fa-expand" }),
                        _vm._v(" expand")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/fast-backward" } }, [
                        _c("i", { staticClass: "fa fa-fast-backward" }),
                        _vm._v(" fast-backward")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/fast-forward" } }, [
                        _c("i", { staticClass: "fa fa-fast-forward" }),
                        _vm._v(" fast-forward")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/forward" } }, [
                        _c("i", { staticClass: "fa fa-forward" }),
                        _vm._v(" forward")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/pause" } }, [
                        _c("i", { staticClass: "fa fa-pause" }),
                        _vm._v(" pause")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/play" } }, [
                        _c("i", { staticClass: "fa fa-play" }),
                        _vm._v(" play")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/play-circle" } }, [
                        _c("i", { staticClass: "fa fa-play-circle" }),
                        _vm._v(" play-circle")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/play-circle-o" } }, [
                        _c("i", { staticClass: "fa fa-play-circle-o" }),
                        _vm._v(" play-circle-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/step-backward" } }, [
                        _c("i", { staticClass: "fa fa-step-backward" }),
                        _vm._v(" step-backward")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/step-forward" } }, [
                        _c("i", { staticClass: "fa fa-step-forward" }),
                        _vm._v(" step-forward")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/stop" } }, [
                        _c("i", { staticClass: "fa fa-stop" }),
                        _vm._v(" stop")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/youtube-play" } }, [
                        _c("i", { staticClass: "fa fa-youtube-play" }),
                        _vm._v(" youtube-play")
                      ])
                    ]
                  )
                ],
                1
              ),
              _c("h4", [
                _vm._v("Medical "),
                _c("span", { staticClass: "fw-semi-bold" }, [_vm._v("Icons")])
              ]),
              _c(
                "b-row",
                { staticClass: "icon-list" },
                [
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/ambulance" } }, [
                        _c("i", { staticClass: "fa fa-ambulance" }),
                        _vm._v(" ambulance")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/h-square" } }, [
                        _c("i", { staticClass: "fa fa-h-square" }),
                        _vm._v(" h-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/hospital-o" } }, [
                        _c("i", { staticClass: "fa fa-hospital-o" }),
                        _vm._v(" hospital-o")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/medkit" } }, [
                        _c("i", { staticClass: "fa fa-medkit" }),
                        _vm._v(" medkit")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/plus-square" } }, [
                        _c("i", { staticClass: "fa fa-plus-square" }),
                        _vm._v(" plus-square")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/stethoscope" } }, [
                        _c("i", { staticClass: "fa fa-stethoscope" }),
                        _vm._v(" stethoscope")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/user-md" } }, [
                        _c("i", { staticClass: "fa fa-user-md" }),
                        _vm._v(" user-md")
                      ])
                    ]
                  ),
                  _c(
                    "b-col",
                    {
                      staticClass: "icon-list-item",
                      attrs: { lg: "3", md: "4", xs: "12" }
                    },
                    [
                      _c("a", { attrs: { href: "../icon/wheelchair" } }, [
                        _c("i", { staticClass: "fa fa-wheelchair" }),
                        _vm._v(" wheelchair")
                      ])
                    ]
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      )
    ],
    1
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("h1", { staticClass: "page-title" }, [
      _vm._v("UI - "),
      _c("span", { staticClass: "fw-semi-bold" }, [_vm._v("Icons")])
    ])
  }
]
render._withStripped = true

export { render, staticRenderFns }"}]}